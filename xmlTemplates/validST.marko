<!-- Successful Service Ticket Validation 2.0/3.0 -->
<cas:serviceResponse xmlns:cas="http://www.yale.edu/tp/cas">
 <cas:authenticationSuccess>
  <cas:user>${input.profile.uuid}</cas:user>
  <!--<cas:proxyGrantingTicket>PGTIOU-84678-8a9d...</cas:proxyGrantingTicket>-->

  <cas:attributes if(input.profile.attributes)>
    <if(input.profile.attributes.standardAttributes)>
      <!-- This floating $ denotes a JS block in Marko v4 -->
      $ let attrs=input.profile.attributes.standardAttributes
      <cas:authenticationDate if(attrs.authenticationDate)>${attrs.authenticationDate}</cas:authenticationDate>
      <cas:longTermAuthenticationRequestTokenUsed if(attrs.longTermAuthenticationRequestTokenUsed)>
        ${attrs.longTermAuthenticationRequestTokenUsed}
      </cas:longTermAuthenticationRequestTokenUsed>
      <cas:isFromNewLogin if(attrs.isFromNewLogin)>${attrs.isFromNewLogin}</cas:isFromNewLogin>
      <if(attrs.memberOf)>
        <cas:memberOf for(group in attrs.memberOf)>${group}</cas:memberOf>
      </if>
    </if>

    <if(input.profile.attributes.extraAttributes)>
       <for(name,value in input.profile.attributes.extraAttributes)>
        <if(name === 'memberOf')>
          <cas:memberOf for(group in value)>${group}</cas:memberOf>
        </if>
        <else>
          <cas:${name}>${value}</cas:${name}>
        </else>
       </for>
    </if>
  </cas:attributes>
 </cas:authenticationSuccess>
</cas:serviceResponse>
